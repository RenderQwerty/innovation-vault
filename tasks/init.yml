---

- name: detect vault status
  stat:
    path: "{{ vault_config_path }}/init.file"
  register: stat_result

- name: initialise vault server
  shell: export VAULT_ADDR="http://127.0.0.1:{{ backend_port }}" && vault operator init -key-shares=2 -key-threshold=2 > "{{ vault_config_path }}/init.file"
  when: stat_result.stat.exists == False

- name: copy unseal script
  template:
    src: unseal.sh.j2
    dest: /tmp/unseal.sh
    mode: 0755

- name: copy bashrc
  template:
    src: bashrc.j2
    dest: /root/.bashrc

- name: copy vault policy
  copy:
    src: policy.hcl
    dest: "{{ vault_config_path }}/policy.hcl"

- name: unseal/write secret & create policy & token for jenkins
  shell: /tmp/unseal.sh >> /tmp/unseal.log

- name: get token
  shell: cat /tmp/jenkins_token
  register: jenkins_token

- name: store token in facts
  set_fact:
    JENKINS_TOKEN: "{{ jenkins_token.stdout }}"
