#!/usr/bin/env bash

export VAULT_ADDR="http://127.0.0.1:{{ backend_port }}"
initfile={{ vault_config_path}}/init.file
secret=https://gist.githubusercontent.com/RenderQwerty/d0b25bcd2ac795a381b112500122e2e1/raw/671b6d04c1e173a66208e34b6c5d46eb943d6cbe/services.yaml

# Get seal keys
key_1=$(sed -n 1p "$initfile" | cut -d':' -f2 | tr -d '[:space:]')
key_2=$(sed -n 2p "$initfile" | cut -d':' -f2 | tr -d '[:space:]')
root_token=$(sed -n 4p "$initfile" | cut -d':' -f2 | tr -d '[:space:]')

# unseal vault storage
vault operator unseal $key_1 && vault operator unseal $key_2

#provision jenkins secret
echo "root token $root_token"
vault login $root_token && vault write secret/jenkins username=admin password=$(date +%s | sha256sum | base64 | head -c 32 ; echo)

vault policy write jenkins {{ vault_config_path}}/policy.hcl
vault policy write jenkins {{ vault_config_path}}/jenkins.hcl
vault token create -policy=jenkins -field=token > /tmp/vault_token

# save encryption keys
echo "ROOT Token = $root_token" > /tmp/secrets
echo "UNSEAL key #1 = $key_1" >> /tmp/secrets
echo "UNSEAL key #2 = $key_2" >> /tmp/secrets

# save parameters to vault
curl $secret > services.yaml
vault write secret/services.yaml value=@services.yaml

# Enable approle auth
vault auth enable approle
vault write auth/approle/role/jenkins \
    secret_id_ttl=90m \
    token_num_uses=5 \
    token_ttl=90m \
    token_max_ttl=90m \
    policies="jenkins"


role_id=$(vault read auth/approle/role/jenkins/role-id | tail -1)
jenkins_token=$(vault token create -policy=jenkins | grep -w token)
echo "--------" >> /tmp/secrets
echo "JENKINS_VAULT_TOKEN $jenkins_token" >> /tmp/secrets
echo "JENKINS_ROLE_ID $role_id" >> /tmp/secrets
